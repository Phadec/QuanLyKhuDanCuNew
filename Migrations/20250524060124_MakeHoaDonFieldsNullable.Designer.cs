// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanLyKhuDanCu.Data;

#nullable disable

namespace QuanLyKhuDanCu.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250524060124_MakeHoaDonFieldsNullable")]
    partial class MakeHoaDonFieldsNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("QuanLyKhuDanCu.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CMND")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("QuanLyKhuDanCu.Models.DichVu", b =>
                {
                    b.Property<int>("DichVuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("PhiDichVu")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("TenDichVu")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("DichVuId");

                    b.ToTable("DichVus");
                });

            modelBuilder.Entity("QuanLyKhuDanCu.Models.HoKhau", b =>
                {
                    b.Property<int>("HoKhauId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ChuHoId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MaHoKhau")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("HoKhauId");

                    b.HasIndex("ChuHoId");

                    b.ToTable("HoKhaus");
                });

            modelBuilder.Entity("QuanLyKhuDanCu.Models.HoaDon", b =>
                {
                    b.Property<int>("HoaDonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("GhiChu")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("HanThanhToan")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("HoKhauId")
                        .HasColumnType("int");

                    b.Property<int>("LoaiPhiId")
                        .HasColumnType("int");

                    b.Property<string>("MaHoaDon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("NgayThanhToan")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NguoiThuId")
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("HoaDonId");

                    b.HasIndex("HoKhauId");

                    b.HasIndex("LoaiPhiId");

                    b.HasIndex("NguoiThuId");

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("QuanLyKhuDanCu.Models.LoaiPhi", b =>
                {
                    b.Property<int>("LoaiPhiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("BatBuoc")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ChuKy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("MucPhi")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("TenLoaiPhi")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("LoaiPhiId");

                    b.ToTable("LoaiPhis");
                });

            modelBuilder.Entity("QuanLyKhuDanCu.Models.NhanKhau", b =>
                {
                    b.Property<int>("NhanKhauId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CMND")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("HoKhauId")
                        .HasColumnType("int");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("NgayDangKy")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NgheNghiep")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NoiLamViec")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("QuanHeVoiChuHo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("QuocTich")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("NhanKhauId");

                    b.HasIndex("HoKhauId");

                    b.HasIndex("UserId");

                    b.ToTable("NhanKhaus");
                });

            modelBuilder.Entity("QuanLyKhuDanCu.Models.PhanAnh", b =>
                {
                    b.Property<int>("PhanAnhId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FileDinhKem")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("NgayXuLy")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NguoiXuLyId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhanHoi")
                        .HasColumnType("longtext");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("PhanAnhId");

                    b.HasIndex("NguoiXuLyId");

                    b.HasIndex("UserId");

                    b.ToTable("PhanAnhs");
                });

            modelBuilder.Entity("QuanLyKhuDanCu.Models.TamTruTamVang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DiaChiTamTruTamVang")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LoaiDon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LyDo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("NgayDuyet")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NguoiDuyetId")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("NhanKhauId")
                        .HasColumnType("int");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("NguoiDuyetId");

                    b.HasIndex("NhanKhauId");

                    b.ToTable("TamTruTamVangs");
                });

            modelBuilder.Entity("QuanLyKhuDanCu.Models.ThongBao", b =>
                {
                    b.Property<int>("ThongBaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DoiTuong")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FileDinhKem")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("NgayHetHan")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NguoiTaoId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("ThongBaoId");

                    b.HasIndex("NguoiTaoId");

                    b.ToTable("ThongBaos");
                });

            modelBuilder.Entity("QuanLyKhuDanCu.Models.YeuCauDichVu", b =>
                {
                    b.Property<int>("YeuCauDichVuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DichVuId")
                        .HasColumnType("int");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("NgayHoanThanh")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("NgayXuLy")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("NgayYeuCau")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NguoiXuLyId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("YeuCauDichVuId");

                    b.HasIndex("DichVuId");

                    b.HasIndex("NguoiXuLyId");

                    b.HasIndex("UserId");

                    b.ToTable("YeuCauDichVus");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("QuanLyKhuDanCu.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("QuanLyKhuDanCu.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKhuDanCu.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("QuanLyKhuDanCu.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QuanLyKhuDanCu.Models.HoKhau", b =>
                {
                    b.HasOne("QuanLyKhuDanCu.Models.ApplicationUser", "ChuHo")
                        .WithMany()
                        .HasForeignKey("ChuHoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ChuHo");
                });

            modelBuilder.Entity("QuanLyKhuDanCu.Models.HoaDon", b =>
                {
                    b.HasOne("QuanLyKhuDanCu.Models.HoKhau", "HoKhau")
                        .WithMany("HoaDons")
                        .HasForeignKey("HoKhauId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKhuDanCu.Models.LoaiPhi", "LoaiPhi")
                        .WithMany("HoaDons")
                        .HasForeignKey("LoaiPhiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("QuanLyKhuDanCu.Models.ApplicationUser", "NguoiThu")
                        .WithMany()
                        .HasForeignKey("NguoiThuId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("HoKhau");

                    b.Navigation("LoaiPhi");

                    b.Navigation("NguoiThu");
                });

            modelBuilder.Entity("QuanLyKhuDanCu.Models.NhanKhau", b =>
                {
                    b.HasOne("QuanLyKhuDanCu.Models.HoKhau", "HoKhau")
                        .WithMany("NhanKhaus")
                        .HasForeignKey("HoKhauId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKhuDanCu.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("HoKhau");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanLyKhuDanCu.Models.PhanAnh", b =>
                {
                    b.HasOne("QuanLyKhuDanCu.Models.ApplicationUser", "NguoiXuLy")
                        .WithMany()
                        .HasForeignKey("NguoiXuLyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("QuanLyKhuDanCu.Models.ApplicationUser", "User")
                        .WithMany("PhanAnhs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("NguoiXuLy");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanLyKhuDanCu.Models.TamTruTamVang", b =>
                {
                    b.HasOne("QuanLyKhuDanCu.Models.ApplicationUser", "NguoiDuyet")
                        .WithMany()
                        .HasForeignKey("NguoiDuyetId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("QuanLyKhuDanCu.Models.NhanKhau", "NhanKhau")
                        .WithMany("TamTruTamVangs")
                        .HasForeignKey("NhanKhauId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDuyet");

                    b.Navigation("NhanKhau");
                });

            modelBuilder.Entity("QuanLyKhuDanCu.Models.ThongBao", b =>
                {
                    b.HasOne("QuanLyKhuDanCu.Models.ApplicationUser", "NguoiTao")
                        .WithMany("ThongBaos")
                        .HasForeignKey("NguoiTaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("NguoiTao");
                });

            modelBuilder.Entity("QuanLyKhuDanCu.Models.YeuCauDichVu", b =>
                {
                    b.HasOne("QuanLyKhuDanCu.Models.DichVu", "DichVu")
                        .WithMany("YeuCauDichVus")
                        .HasForeignKey("DichVuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("QuanLyKhuDanCu.Models.ApplicationUser", "NguoiXuLy")
                        .WithMany()
                        .HasForeignKey("NguoiXuLyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("QuanLyKhuDanCu.Models.ApplicationUser", "User")
                        .WithMany("YeuCauDichVus")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DichVu");

                    b.Navigation("NguoiXuLy");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanLyKhuDanCu.Models.ApplicationUser", b =>
                {
                    b.Navigation("PhanAnhs");

                    b.Navigation("ThongBaos");

                    b.Navigation("YeuCauDichVus");
                });

            modelBuilder.Entity("QuanLyKhuDanCu.Models.DichVu", b =>
                {
                    b.Navigation("YeuCauDichVus");
                });

            modelBuilder.Entity("QuanLyKhuDanCu.Models.HoKhau", b =>
                {
                    b.Navigation("HoaDons");

                    b.Navigation("NhanKhaus");
                });

            modelBuilder.Entity("QuanLyKhuDanCu.Models.LoaiPhi", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("QuanLyKhuDanCu.Models.NhanKhau", b =>
                {
                    b.Navigation("TamTruTamVangs");
                });
#pragma warning restore 612, 618
        }
    }
}
